{"version":3,"sources":["Components/FindNearby/RejectedResources.js"],"names":["RejectedResources","dispatch","useDispatch","useEffect","resourcerejectedlist","status","pendinglist","useSelector","payload","useState","className","Array","isArray","length","map","item","src","photos","alt","name","mobile","city","reason","resource_type","class","onChange","event","target","value","resourceupdatelist","id","colspan","style","textAlign"],"mappings":"8JAgHeA,UAvGf,WACE,IAAMC,EAAWC,cACjBC,qBAAU,WACRF,EAASG,YAAqB,CAAEC,OAAQ,eACvC,IACH,IAAIC,EAAcC,aAChB,qBAAGH,qBAAgDI,WAN1B,EASHC,oBAAS,GATN,gCAUPA,mBAAS,KAVF,gCAWCA,sBAXD,mBAc3B,OAd2B,UAezB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,mBACA,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,SACf,+BACE,4BACE,sCACA,wCACA,sCACA,wCACA,+CACA,sCACA,2CAGJ,+BACGC,MAAMC,QAAQN,IAAgBA,EAAYO,OAAS,EAClDP,EAAYQ,KAAI,SAACC,GACf,OACE,4BACE,4BACE,yBACEC,IAAKD,EAAKE,OACVP,UAAU,OACVQ,IAAI,SAELH,EAAKI,MAER,gCAAMJ,EAAKK,OAAX,KACA,gCAAML,EAAKM,KAAX,KACA,gCAAMN,EAAKO,OAAX,KACA,gCAAMP,EAAKQ,cAAX,KACA,gCAAMR,EAAKV,OAAX,KACA,4BACE,4BACEmB,MAAM,gBACNC,SAAU,SAACC,GACT,OAAQA,EAAMC,OAAOC,OACnB,IAAK,WACH3B,EACE4B,YAAmB,CACjBC,GAAIf,EAAKe,GAAK,GACdzB,OAAQ,cAGZ,MACF,IAAK,UACHJ,EACE4B,YAAmB,CACjBC,GAAIf,EAAKe,GAAK,GACdzB,OAAQ,aAKhBqB,EAAMC,OAAOC,MAAQ,kBAGvB,4BAAQA,MAAM,iBAAd,iBAGA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,iBAOV,4BACE,wBAAIG,QAAQ,IAAIC,MAAO,CAAEC,UAAW,WAApC","file":"static/js/28.ee3b3667.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport {\n  resourcerejectedlist,\n  resourceupdatelist,\n} from \"../../reduxx/actions/actions\";\n\nfunction RejectedResources() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(resourcerejectedlist({ status: \"pending\" }));\n  }, []);\n  var pendinglist = useSelector(\n    ({ resourcerejectedlist }) => resourcerejectedlist.payload\n  );\n\n  const [show, setShow] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [reason, setReason] = useState(); \n  const handleClose = () => setShow(false);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 grid-margin\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\"> Rejected List </h4>\n            <div className=\"table-responsive\">\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th> Name </th>\n                    <th> Mobile </th>\n                    <th> City </th>\n                    <th> Reason </th>\n                    <th> Resource Type </th>\n                    <th>Status</th>\n                    <th> Actions </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Array.isArray(pendinglist) && pendinglist.length > 0 ? (\n                    pendinglist.map((item) => {\n                      return (\n                        <tr>\n                          <td>\n                            <img\n                              src={item.photos}\n                              className=\"mr-2\"\n                              alt=\"face\"\n                            />\n                            {item.name}\n                          </td>\n                          <td> {item.mobile} </td>\n                          <td> {item.city} </td>\n                          <td> {item.reason} </td>\n                          <td> {item.resource_type} </td>\n                          <td> {item.status} </td>\n                          <td>\n                            <select\n                              class=\"custom-select\"\n                              onChange={(event) => {\n                                switch (event.target.value) {\n                                  case \"approved\":\n                                    dispatch(\n                                      resourceupdatelist({\n                                        id: item.id + \"\",\n                                        status: \"approved\",\n                                      })\n                                    );\n                                    break;\n                                  case \"pending\":\n                                    dispatch(\n                                      resourceupdatelist({\n                                        id: item.id + \"\",\n                                        status: \"pending\",\n                                      })\n                                    );\n                                    break;\n                                }\n                                event.target.value = \"update_status\";\n                              }}\n                            >\n                              <option value=\"update_status\">\n                                Update Status\n                              </option>\n                              <option value=\"approved\">Approved</option>\n                              <option value=\"pending\">Pending</option>\n                            </select>\n                          </td>\n                        </tr>\n                      );\n                    })\n                  ) : (\n                    <tr>\n                      <td colspan=\"7\" style={{ textAlign: \"center\" }}>\n                        No Data Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RejectedResources;\n"],"sourceRoot":""}