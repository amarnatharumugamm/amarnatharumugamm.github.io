{"version":3,"sources":["Components/DoctorDesignation.js"],"names":["DoctorDesignation","dispatch","useDispatch","useState","todos","setTodos","error","setError","useEffect","designationlist","designation","useSelector","payload","style","display","justifyContent","className","onSubmit","e","preventDefault","currentTarget","reset","adddoctor","type","placeholder","onChange","event","target","value","class","Array","isArray","map","doc","marginTop","alignSelf","charAt","toUpperCase","slice","onClick","deldoctor","id"],"mappings":"8JA+GeA,UAvGW,WACxB,IAAMC,EAAWC,cADa,EAEJC,mBAAS,IAFL,mBAEvBC,EAFuB,KAEhBC,EAFgB,OAGJF,mBAAS,IAHL,mBAGvBG,EAHuB,KAGhBC,EAHgB,KAgB9BC,qBAAU,WACRP,EAASQ,iBACR,IAEH,IAAMC,EAAcC,aAClB,qBAAGF,gBAAsCG,WAG3C,OACE,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,yBAAKC,UAAU,qCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,eACA,0BAAMA,UAAU,mBAAmBC,SA1BxB,SAACC,GACpBA,EAAEC,iBACW,IAATf,EACFG,EAAS,iCAETW,EAAEC,iBAEFD,EAAEE,cAAcC,QAChBpB,EAASqB,YAAU,CAAEZ,YAAaN,QAmB1B,2BACEmB,KAAK,OACLP,UAAU,sBACVQ,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAWrB,EAASqB,EAAMC,OAAOC,UAE7C,4BACEL,KAAK,SACLP,UAAU,0DAFZ,UAODV,GACC,yBAAKuB,MAAM,uBACT,gCAASvB,IAMb,yBAAKU,UAAU,gBACb,wBAAIA,UAAU,iCACXc,MAAMC,QAAQrB,IACbA,EAAYsB,KAAI,SAACC,GACf,OACE,yBACEpB,MAAO,CACLqB,UAAW,OACXpB,QAAS,OACTC,eAAgB,kBAGlB,yBAAKF,MAAO,CAAEC,QAAS,OAAQqB,UAAW,WAGtCF,EAAIvB,YAAY0B,OAAO,GAAGC,cACxBJ,EAAIvB,YAAY4B,MAAM,IAG5B,8BAIE,4BACEtB,UAAU,iBACVuB,QAAS,kBACPtC,EAASuC,YAAU,CAAEC,GAAIR,EAAIQ,GAAK,QAHtC","file":"static/js/24.54e75d7c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  adddoctor,\n  designationlist,\n  deldoctor,\n} from \"../reduxx/actions/actions\";\n\nconst DoctorDesignation = () => {\n  const dispatch = useDispatch();\n  const [todos, setTodos] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (todos == \"\") {\n      setError(\"Kindly Enter the Designation\");\n    } else {\n      e.preventDefault();\n      // empty form vaue\n      e.currentTarget.reset();\n      dispatch(adddoctor({ designation: todos }));\n    }\n  };\n\n  useEffect(() => {\n    dispatch(designationlist());\n  }, []);\n\n  const designation = useSelector(\n    ({ designationlist }) => designationlist.payload\n  );\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <div className=\"col-xl-6 grid-margin stretch-card\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">Designation</h4>\n            <form className=\"add-items d-flex\" onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                className=\"form-control h-auto\"\n                placeholder=\"Add doctor designation..\"\n                onChange={(event) => setTodos(event.target.value)}\n              />\n              <button\n                type=\"submit\"\n                className=\"btn btn-gradient-primary font-weight-bold px-lg-4 px-3\"\n              >\n                Add\n              </button>\n            </form>\n            {error ? (\n              <div class=\"alert alert-success\">\n                <strong>{error}</strong>\n              </div>\n            ) : (\n              false\n            )}\n\n            <div className=\"list-wrapper\">\n              <ul className=\"d-flex  flex-column todo-list\">\n                {Array.isArray(designation) &&\n                  designation.map((doc) => {\n                    return (\n                      <div\n                        style={{\n                          marginTop: \"15px\",\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <div style={{ display: \"flex\", alignSelf: \"center\" }}>\n                          {\n                            // first letter capital\n                            doc.designation.charAt(0).toUpperCase() +\n                              doc.designation.slice(1)\n                          }\n                        </div>\n                        <span>\n                          {\n                            // remove button\n                          }\n                          <button\n                            className=\"btn btn-danger\"\n                            onClick={() =>\n                              dispatch(deldoctor({ id: doc.id + \"\" }))\n                            }\n                          >\n                            Remove\n                          </button>\n                        </span>\n                      </div>\n                    );\n                  })}\n\n                {\n                  // {Array.isArray(designation) &&\n                  //   designation.map((user) => {\n                  //     return <li>{user.designation}</li>;\n                  //   })}\n                }\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DoctorDesignation;\n"],"sourceRoot":""}